{"version":3,"sources":["components/Navbar/NavbarItem.js","components/Navbar/Navbar.js","components/ImageSlider/ImageSliderItem.js","App.js","serviceWorker.js","index.js"],"names":["NavbarItem","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","key","value","_this2","itemIndex","setTimeout","setState","showItem","item","react_default","a","createElement","className","classnames","navbarItemShow","Component","Navbar","navbarItems","map","index","Navbar_NavbarItem","ImageSliderItem","imageIndex","onClick","nextImage","bind","assertThisInitialized","imgRef1","React","createRef","imgReflectionRef1","imgRef2","imgReflectionRef2","startingIndex","triggerNextImage","images","console","log","concat","lastTimeoutIdd","window","clearTimeout","slideLeft","cancelTransition","length","current","src","_this3","lastTimeoutId","_this$state","_this$props","size","nextIndex","imageSliderItemWrapperMedium","imageSliderItemWrapperSmall","imageSliderItemMedium","imageSliderItemSmall","imgAndReflectionDivMedium","imgAndReflectionDivSmall","medium","small","ref","alt","imgReflectionMedium","imgReflectionSmall","App","disableButton","components_Navbar_Navbar","disabled","components_ImageSlider_ImageSliderItem","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1c2edc16.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport classnames from 'classnames';\r\n\r\nexport class NavbarItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { itemIndex } = this.props;\r\n\r\n        var delay = itemIndex * 100 + 1500;\r\n\r\n        setTimeout(() => {\r\n            this.setState({ showItem: true });\r\n        }, delay);\r\n    }\r\n\r\n    render() {\r\n        const { item } = this.props;\r\n        const { showItem } = this.state;\r\n\r\n        return (\r\n            <li className={classnames(\"navbarItem\", {\r\n                \"navbarItemShow\": showItem\r\n            })}>{item}</li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavbarItem;","import React, { Component } from 'react'\r\nimport \"./Navbar.css\";\r\nimport NavbarItem from './NavbarItem';\r\n\r\nexport class Navbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            navbarItems: [\r\n                \"Home\",\r\n                \"About\",\r\n                \"Contact\",\r\n                \"Rates\",\r\n                \"Shop\",\r\n                \"Videos\",\r\n                \"Collaboration\"\r\n            ]\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { navbarItems } = this.state;\r\n\r\n        return (\r\n            <div className=\"navbarDiv\">\r\n                <ul className=\"navbarItemsList\">\r\n                    {navbarItems.map(function (item, index) {\r\n                        return <NavbarItem item={item} itemIndex={index} />\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react'\r\nimport \"./ImageSliderItem.css\";\r\nimport classnames from 'classnames';\r\n\r\nexport class ImageSliderItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            imageIndex: 0\r\n        };\r\n\r\n        this.onClick = this.props.onClick;\r\n        this.nextImage = this.nextImage.bind(this);\r\n\r\n        // refs\r\n        this.imgRef1 = React.createRef();\r\n        this.imgReflectionRef1 = React.createRef();\r\n        this.imgRef2 = React.createRef();\r\n        this.imgReflectionRef2 = React.createRef();\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.setState({ imageIndex: this.props.startingIndex });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const { triggerNextImage } = this.props;\r\n        if (triggerNextImage) {\r\n            this.nextImage();\r\n        }\r\n    }\r\n\r\n    nextImage() {\r\n        var { imageIndex } = this.state;\r\n        var { images } = this.props;\r\n        console.log(`imageIndex: ${imageIndex}`)\r\n\r\n        while (this.state.lastTimeoutIdd-- && this.state.lastTimeoutIdd >= 0) {\r\n            // console.log('Timeout ID: ', this.state.lastTimeoutIdd);\r\n            window.clearTimeout(this.state.lastTimeoutIdd); // will do nothing if no timeout with id is present            \r\n        }\r\n\r\n        this.setState({ slideLeft: true }, function () {\r\n            setTimeout(() => {\r\n                this.setState({ cancelTransition: true }, function () {\r\n\r\n                    if (imageIndex + 1 != images.length) {\r\n                        // if the next pic's index is within bounds (not equal to or greater than the array's size)\r\n\r\n                        imageIndex++;\r\n                        // console.log(`imageIndex for img2: ${imageIndex + 1}`)\r\n                        if (imageIndex + 1 >= images.length) {\r\n                            console.log(\"if\")\r\n                            this.imgRef2.current.src = images[0].src;\r\n                            this.imgReflectionRef2.current.src = images[0].src;\r\n                        } else {\r\n                            console.log(\"else\");\r\n                            this.imgRef2.current.src = images[imageIndex + 1].src;\r\n                            this.imgReflectionRef2.current.src = images[imageIndex + 1].src;\r\n                        }\r\n                        this.imgRef1.current.src = images[imageIndex].src;\r\n                        this.imgReflectionRef1.current.src = images[imageIndex].src;\r\n                        this.setState({ imageIndex });\r\n                    }\r\n                    else {\r\n                        console.log(\"restart\");\r\n                        this.imgRef2.current.src = images[1].src;\r\n                        this.imgReflectionRef2.current.src = images[1].src;\r\n\r\n                        this.imgRef1.current.src = images[0].src;\r\n                        this.imgReflectionRef1.current.src = images[0].src;\r\n                        this.setState({ imageIndex: 0 });\r\n                    }\r\n\r\n                    this.setState({ slideLeft: false }, function () {\r\n                        var lastTimeoutId = setTimeout(() => {\r\n                            this.setState({ cancelTransition: false });\r\n                        }, 100);\r\n\r\n                        this.setState({ lastTimeoutIdd: lastTimeoutId });\r\n                    }.bind(this));\r\n                }.bind(this));\r\n            }, 500);\r\n        }.bind(this));\r\n    }\r\n\r\n    render() {\r\n\r\n        const { slideLeft, cancelTransition } = this.state;\r\n        var { images, startingIndex, size } = this.props;\r\n\r\n        var nextIndex = startingIndex;\r\n        if (nextIndex === images.length - 1) {\r\n            nextIndex = 0;\r\n        } else {\r\n            nextIndex++;\r\n        }\r\n\r\n        return (\r\n            <div className={classnames(\"imageSliderItemWrapper\", {\r\n                \"imageSliderItemWrapperMedium\": size === \"medium\"\r\n                , \"imageSliderItemWrapperSmall\": size === \"small\"\r\n            })}>\r\n                <div className={classnames(\"imageSliderItem\", {\r\n                    \"imageSliderItemMedium\": size === \"medium\"\r\n                    , \"imageSliderItemSmall\": size === \"small\"\r\n                })}>\r\n                    <div className={classnames(\"imgAndReflectionDiv\", {\r\n                        \"cancelTransition\": cancelTransition\r\n                        , \"slideLeft\": slideLeft\r\n                        , \"imgAndReflectionDivMedium\": size === \"medium\"\r\n                        , \"imgAndReflectionDivSmall\": size === \"small\"\r\n                    })}>\r\n                        <img className={classnames(\"\", {\r\n                            \"medium\": size === \"medium\"\r\n                            , \"small\": size === \"small\"\r\n                        })} ref={this.imgRef1} src={images[startingIndex].src} alt={images[startingIndex].alt}></img>\r\n                        <div className=\"imgReflectionWrapper\">\r\n                            <img className={classnames(\"imgReflection\", {\r\n                                \"imgReflectionMedium\": size === \"medium\"\r\n                                ,\"imgReflectionSmall\": size === \"small\"\r\n                            })}\r\n                                ref={this.imgReflectionRef1} src={images[startingIndex].src} alt={images[startingIndex].alt}></img>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className={classnames(\"imgAndReflectionDiv\", {\r\n                        \"cancelTransition\": cancelTransition\r\n                        , \"slideLeft\": slideLeft\r\n                        , \"imgAndReflectionDivMedium\": size === \"medium\"\r\n                        , \"imgAndReflectionDivSmall\": size === \"small\"\r\n                    })}>\r\n                        <img className={classnames(\"\", {\r\n                            \"medium\": size\r\n                        })} ref={this.imgRef2} src={images[nextIndex].src} alt={images[nextIndex].alt}></img>\r\n                        <div className=\"imgReflectionWrapper\">\r\n                            <img className={classnames(\"imgReflection\", {\r\n                                \"imgReflectionMedium\": size === \"medium\"\r\n                                ,\"imgReflectionSmall\": size === \"small\"\r\n                            })}\r\n                                ref={this.imgReflectionRef2} src={images[nextIndex].src} alt={images[nextIndex].alt}></img>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default ImageSliderItem;","import React, { Component } from 'react'\nimport Navbar from './components/Navbar/Navbar';\nimport './App.css';\nimport ImageSliderItem from './components/ImageSlider/ImageSliderItem';\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      images: [\n        {\n          src: \"./images/1/wheat.jpg\",\n          alt: \"0\"\n        },\n        {\n          src: \"./images/1/mountain.jpg\",\n          alt: \"1\"\n        },\n        {\n          src: \"./images/1/turtle.jpg\",\n          alt: \"2\"\n        },\n        {\n          src: \"./images/1/path.jpg\",\n          alt: \"2\"\n        },\n        {\n          src: \"./images/1/hay.jpeg\",\n          alt: \"2\"\n        },\n      ]\n    }\n\n    this.onClick = this.onClick.bind(this);\n\n  }\n\n\n  onClick() {\n    this.setState({ triggerNextImage: true, disableButton: true }, function () {\n      this.setState({ triggerNextImage: false });\n    }.bind(this));\n\n    setTimeout(() => {\n      this.setState({ disableButton: false });\n    }, 600);\n\n  }\n\n  render() {\n\n    const { images, triggerNextImage, disableButton } = this.state;\n\n    return (\n      <div className=\"App\" >\n        <Navbar />\n\n        <div className=\"sliderDiv\">\n          <button disabled={disableButton} onClick={this.onClick}>Change</button>\n\n          <ImageSliderItem size=\"small\" startingIndex={0} images={images} triggerNextImage={triggerNextImage} />\n          <ImageSliderItem size=\"medium\" startingIndex={1} images={images} triggerNextImage={triggerNextImage} />\n          <ImageSliderItem size=\"null\" startingIndex={2} images={images} triggerNextImage={triggerNextImage} />\n          <ImageSliderItem size=\"medium\" startingIndex={3} images={images} triggerNextImage={triggerNextImage} />\n          <ImageSliderItem size=\"small\" startingIndex={4} images={images} triggerNextImage={triggerNextImage} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}